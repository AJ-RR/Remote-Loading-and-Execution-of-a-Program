ORG 00H
LJMP 8000H
ORG 23H
LJMP TRANSMIT
ORG 8000H
MAIN:
MOV IE,#90H
MOV R0,#00h;stores value of state
MOV R1,#80h;START higher order address byte
MOV R2,#00h;START lower order address byte
MOV R3,#80h;END higher address
MOV R4,#05H;END lower address
MOV R5,#00H;count
MOV R6,#00H;checksum 
MOV 30H,#00H;LOWER LENGTH BYTE
MOV 31H,#00H;higher length byte
MOV 32H,#0FFH;record length
MOV 33H,#00H;record type
MOV 34H,#00H;END BIT
MOV DPH,#00H;data higher byte
MOV DPL,#50H;data lower byte
CLR C
MOV A,R4
SUBB A,R2
MOV 30H,A
MOV A,R3
SUBB A,R1
MOV 31H,A
MOV TMOD,#20H
MOV SCON,#50H
MOV TH1,#0FDH
MOV TL1,#0FDH
SETB TR1
MOV SBUF,#3AH
INC R0
LOOP:
NOP
LJMP LOOP
ENDING:
MOV 32H,#00H
MOV R1,#00H
MOV R2,#00H
MOV 33H,#01H
SJMP CONTINUE
TRANSMIT:
MOV A,34H
CJNE A,#00H,ENDING
MOV A,31H
CJNE A,#00H,CONTINUE
MOV 32H,30H
CONTINUE:
STATE0:;colon
CJNE R0,#00H,STATE1
CLR TI
MOV A,#3AH
MOV SBUF,A
INC R0
RETI
STATE1:;length
CJNE R0,#01H,STATE2
CLR TI
MOV A,32H
MOV SBUF,A
ADD A,R6
MOV R6,A
INC R0
RETI
STATE2:;higher address byte
CJNE R0,#02H,STATE3
CLR TI
MOV A,R1
MOV SBUF,A
ADD A,R6
MOV R6,A
INC R0
RETI
STATE3:;lower address byte
CJNE R0,#03H,STATE4
CLR TI
MOV A,R2
MOV SBUF,A
ADD A,R6
MOV R6,A
INC R0
RETI
STATE4:;record type
CJNE R0,#04H,STATE5
CLR TI
MOV A,33H
ADD A,R6
MOV R6,A
MOV A,33H
MOV SBUF,A
INC R0
RETI
STATE5:;data
CLR TI
CJNE R0,#05H,STATE6
MOV A,33H
CJNE A,#00H,STATE6
MOVX A,@DPTR
MOV SBUF,A
INC DPTR
INC R5
ADD A,R6
MOV R6,A
MOV A,32H
CJNE A,05H,BACK
MOV R5,#00H
INC R0
BACK:
RETI
STATE6:;checksum
CLR TI
MOV A,33H
CJNE A,#00H,BYE
MOV A,R6
CPL A
INC A
MOV R0,#00H
MOV SBUF,A
MOV A,32H
CJNE A,#0FFH,FINAL_CONDITION
CLR C
MOV A,R2
ADDC A,#0FFH
MOV R2,A
MOV A,R1
ADDC A,#00H
MOV R1,A
MOV A,R4
SUBB A,R2
MOV 30H,A
MOV A,R3
SUBB A,R1
MOV 31H,A
RETI
FINAL_CONDITION:
MOV 34H,#01H
RETI
BYE:
MOV SBUF,#0FFH
END